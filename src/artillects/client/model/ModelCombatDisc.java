// Date: 12/13/2013 11:31:36 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package artillects.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelCombatDisc extends ModelDrone
{
    //fields
    ModelRenderer disc;
    ModelRenderer discTop;
    ModelRenderer discBottom;
    ModelRenderer discTopEdge1;
    ModelRenderer discTopEdge2;
    ModelRenderer discTopEdge3;
    ModelRenderer discTopEdge4;
    ModelRenderer discTop2;
    ModelRenderer engine;
    ModelRenderer weaponBase;
    ModelRenderer weaponBaseMount;
    ModelRenderer weaponBody;
    ModelRenderer weaponBarrel;

    public ModelCombatDisc()
    {
        textureWidth = 128;
        textureHeight = 128;

        disc = new ModelRenderer(this, 0, 0);
        disc.addBox(-9F, 0F, -9F, 18, 2, 18);
        disc.setRotationPoint(0F, 9F, 0F);
        disc.setTextureSize(128, 128);
        disc.mirror = true;
        setRotation(disc, 0F, 0F, 0F);
        discTop = new ModelRenderer(this, 0, 0);
        discTop.addBox(-7F, 0F, -7F, 14, 2, 14);
        discTop.setRotationPoint(0F, 7F, 0F);
        discTop.setTextureSize(128, 128);
        discTop.mirror = true;
        setRotation(discTop, 0F, 0F, 0F);
        discBottom = new ModelRenderer(this, 0, 0);
        discBottom.addBox(-7F, 0F, -7F, 14, 2, 14);
        discBottom.setRotationPoint(0F, 11F, 0F);
        discBottom.setTextureSize(128, 128);
        discBottom.mirror = true;
        setRotation(discBottom, 0F, 0F, 0F);
        discTopEdge1 = new ModelRenderer(this, 0, 0);
        discTopEdge1.addBox(-8F, 0F, -5F, 1, 2, 10);
        discTopEdge1.setRotationPoint(0F, 7F, 0F);
        discTopEdge1.setTextureSize(128, 128);
        discTopEdge1.mirror = true;
        setRotation(discTopEdge1, 0F, 0F, 0F);
        discTopEdge2 = new ModelRenderer(this, 0, 0);
        discTopEdge2.addBox(7F, 0F, -5F, 1, 2, 10);
        discTopEdge2.setRotationPoint(0F, 7F, 0F);
        discTopEdge2.setTextureSize(128, 128);
        discTopEdge2.mirror = true;
        setRotation(discTopEdge2, 0F, 0F, 0F);
        discTopEdge3 = new ModelRenderer(this, 0, 0);
        discTopEdge3.addBox(-5F, 0F, -8F, 10, 2, 1);
        discTopEdge3.setRotationPoint(0F, 7F, 0F);
        discTopEdge3.setTextureSize(128, 128);
        discTopEdge3.mirror = true;
        setRotation(discTopEdge3, 0F, 0F, 0F);
        discTopEdge4 = new ModelRenderer(this, 0, 0);
        discTopEdge4.addBox(-5F, 0F, 7F, 10, 2, 1);
        discTopEdge4.setRotationPoint(0F, 7F, 0F);
        discTopEdge4.setTextureSize(128, 128);
        discTopEdge4.mirror = true;
        setRotation(discTopEdge4, 0F, 0F, 0F);
        discTop2 = new ModelRenderer(this, 0, 0);
        discTop2.addBox(-6F, 0F, -6F, 12, 1, 12);
        discTop2.setRotationPoint(0F, 6F, 0F);
        discTop2.setTextureSize(128, 128);
        discTop2.mirror = true;
        setRotation(discTop2, 0F, 0F, 0F);
        engine = new ModelRenderer(this, 0, 0);
        engine.addBox(-3F, 0F, 5F, 6, 5, 5);
        engine.setRotationPoint(0F, 6.8F, 0F);
        engine.setTextureSize(128, 128);
        engine.mirror = true;
        setRotation(engine, 0F, 0F, 0F);
        weaponBase = new ModelRenderer(this, 0, 0);
        weaponBase.addBox(-2.5F, 0F, -2.5F, 5, 2, 5);
        weaponBase.setRotationPoint(0F, 13F, 0F);
        weaponBase.setTextureSize(128, 128);
        weaponBase.mirror = true;
        setRotation(weaponBase, 0F, 0F, 0F);
        weaponBaseMount = new ModelRenderer(this, 0, 0);
        weaponBaseMount.addBox(-1.5F, 0F, -1.5F, 3, 2, 3);
        weaponBaseMount.setRotationPoint(0F, 15F, 0F);
        weaponBaseMount.setTextureSize(128, 128);
        weaponBaseMount.mirror = true;
        setRotation(weaponBaseMount, 0F, 0F, 0F);
        weaponBody = new ModelRenderer(this, 0, 0);
        weaponBody.addBox(-2F, -2F, -5F, 4, 4, 9);
        weaponBody.setRotationPoint(0F, 18F, 0F);
        weaponBody.setTextureSize(128, 128);
        weaponBody.mirror = true;
        setRotation(weaponBody, 0F, 0F, 0F);
        weaponBarrel = new ModelRenderer(this, 0, 0);
        weaponBarrel.addBox(-1.5F, -1.5F, -7.5F, 3, 3, 4);
        weaponBarrel.setRotationPoint(0F, 18F, 0F);
        weaponBarrel.setTextureSize(128, 128);
        weaponBarrel.mirror = true;
        setRotation(weaponBarrel, 0F, 0F, 0F);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    @Override
    public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity entity)
    {
        //Yaw
        this.weaponBaseMount.rotateAngleY = par4 / (180F / (float) Math.PI);
        this.weaponBody.rotateAngleY = par4 / (180F / (float) Math.PI);
        this.weaponBarrel.rotateAngleY = par4 / (180F / (float) Math.PI);
        //Pitch 
        this.weaponBody.rotateAngleX = par5 / (180F / (float) Math.PI);
        this.weaponBarrel.rotateAngleX = par5 / (180F / (float) Math.PI);
    }

    @Override
    public void render(float f5)
    {
        disc.render(f5);
        discTop.render(f5);
        discBottom.render(f5);
        discTopEdge1.render(f5);
        discTopEdge2.render(f5);
        discTopEdge3.render(f5);
        discTopEdge4.render(f5);
        discTop2.render(f5);
        engine.render(f5);
        weaponBase.render(f5);
        weaponBaseMount.render(f5);
        weaponBody.render(f5);
        weaponBarrel.render(f5);

    }

}
