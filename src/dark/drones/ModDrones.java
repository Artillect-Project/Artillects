package dark.drones;

import java.io.File;
import java.util.Arrays;

import net.minecraft.block.Block;
import net.minecraft.item.Item;
import net.minecraftforge.common.Configuration;
import net.minecraftforge.common.MinecraftForge;
import cpw.mods.fml.common.Loader;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.Mod.Metadata;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkMod;
import cpw.mods.fml.common.registry.TickRegistry;
import cpw.mods.fml.relauncher.Side;
import dark.drones.entity.Drones;
import dark.drones.hive.Hive;
import dark.drones.items.ItemDroneSpawner;

@Mod(modid = ModDrones.MOD_ID, name = ModDrones.MOD_NAME, version = ModDrones.VERSION, useMetadata = true)
@NetworkMod(channels = { ModDrones.CHANNEL }, clientSideRequired = true, serverSideRequired = false)
//, packetHandler = PacketHandler.class
public class ModDrones
{

    // @Mod Prerequisites
    public static final String MAJOR_VERSION = "@MAJOR@";
    public static final String MINOR_VERSION = "@MINOR@";
    public static final String REVIS_VERSION = "@REVIS@";
    public static final String BUILD_VERSION = "@BUILD@";
    public static final String VERSION = MAJOR_VERSION + "." + MINOR_VERSION + "." + REVIS_VERSION + "." + BUILD_VERSION;

    // @Mod
    public static final String MOD_ID = "Artillects";
    public static final String MOD_NAME = "Artillects";

    @SidedProxy(clientSide = "dark.drones.client.ClientProxy", serverSide = "dark.drones.CommonProxy")
    public static CommonProxy proxy;

    public static final String CHANNEL = "Artillects";

    public static final Configuration CONFIGURATION = new Configuration(new File(Loader.instance().getConfigDir(), "Dark/Artillects.cfg"));

    private static final String[] LANGUAGES_SUPPORTED = new String[] { "en_US" };

    //Domain and prefix
    public String DOMAIN = "artillects";
    public String PREFIX = DOMAIN + ":";

    //File paths
    public String DIRECTORY_NO_SLASH = "assets/" + DOMAIN + "/";
    public String DIRECTORY = "/" + DIRECTORY_NO_SLASH;
    public String LANGUAGE_PATH = DIRECTORY + "lang/";
    public String SOUND_PATH = DIRECTORY + "audio/";

    public static final String TEXTURE_DIRECTORY = "textures/";
    public static final String BLOCK_DIRECTORY = TEXTURE_DIRECTORY + "blocks/";
    public static final String ITEM_DIRECTORY = TEXTURE_DIRECTORY + "items/";
    public static final String MODEL_DIRECTORY = TEXTURE_DIRECTORY + "models/";
    public static final String GUI_DIRECTORY = TEXTURE_DIRECTORY + "gui/";

    /* START IDS */
    public static int BLOCK_ID_PRE = 3856;
    public static int ITEM_ID_PREFIX = 15966;

    @Instance(ModDrones.MOD_ID)
    private static ModDrones instance;

    @Metadata(ModDrones.MOD_ID)
    public static ModMetadata meta;
    
    public static Item itemDroneSpawner;

    public static ModDrones instance()
    {
        if (instance == null)
        {
            instance = new ModDrones();
        }
        return instance;
    }

    @EventHandler
    public void preInit(FMLPreInitializationEvent event)
    {
        instance();

        //Load meta
        meta.modId = MOD_ID;
        meta.name = MOD_NAME;
        meta.description = "There is an evil that stares at you from the dark, and makes things go bump in the night. Well this is not a that evil but is a nightmare on its own. From Built Broken Studios i bring you Artillects a robotic hive mind waitng to consume your world";
        meta.url = "www.BuiltBroken.com";

        meta.logoFile = TEXTURE_DIRECTORY + "Drone_Banner.png";
        meta.version = VERSION;
        meta.authorList = Arrays.asList(new String[] { "Archadia", "DarkGuardsman", "Calclavia", "Hangcow" });
        meta.credits = "Please see the website.";
        meta.autogenerated = false;      

        //Register event handlers
        TickRegistry.registerScheduledTickHandler(Hive.instance(), Side.SERVER);
        MinecraftForge.EVENT_BUS.register(Hive.instance());
    }

    @EventHandler
    public void init(FMLInitializationEvent event)
    {
        //Register blocks and tiles
        ModDrones.CONFIGURATION.load();
        ModDrones.itemDroneSpawner = new ItemDroneSpawner();
        ModDrones.CONFIGURATION.save();

        //Reigster entities
        for(Drones drone: Drones.values())
        {
            drone.reg();
        }
    }

    @EventHandler
    public void postInit(FMLPostInitializationEvent event)
    {
        //Load crafting
    }

    public static int nextBlockID()
    {
        int id = BLOCK_ID_PRE;

        while (id > 255 && id < (Block.blocksList.length - 1))
        {
            Block block = Block.blocksList[id];
            if (block == null)
            {
                break;
            }
            id++;
        }
        BLOCK_ID_PRE = id + 1;
        return id;
    }

    public static int nextItemID()
    {
        int id = ITEM_ID_PREFIX;

        while (id > 255 && id < (Item.itemsList.length - 1))
        {
            Item item = Item.itemsList[id];
            if (item == null)
            {
                break;
            }
            id++;
        }
        ITEM_ID_PREFIX = id + 1;
        return id;
    }    
    
}
